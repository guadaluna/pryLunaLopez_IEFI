<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblError.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAABGdBTUEAALGPC/xhBQAAAJhJREFUKFNj
        QAf/TcJ1QBjKxQ7+G4fK/TMK/QTCIDZUGBP8NQpd8c8w9D8Ig9hQYVTw3yTUDKxo0lIIBrJBYlBpCPgf
        GsoMlDgJVrhxPwRDTD4JkoMqAyo0DMuASqAr/A+SgyiyTuIFCryCKwwsgGAYHygHUgPywAQkwf//irog
        GEkMpIYByPiALIjsGST8AaQQXRALDv0PAGT1sOOWkU7FAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="imgCandado.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAONJREFUWEft
        lmENwkAMRicBCUjAAUhAAhKQgAOQggNwMByAA3AA31vWhFyWXQkdf+hLXrjdla4rLGmTfMFcLntZ/4y1
        vMpnIXucTcpB2g0f8tzL2vb3chK20m7MusTOccNGJDN5lyQfazNnxBDLd8LgiUhMu2sQE96FnSTpUOtL
        LJbPMOypVt3VOMR4u+Xm/wrgt24liSIkl/tP+f4+R+sq4iLdwU7sNaYTVazaaNx5s4AsIAvIArIAm3Aj
        Z31ykfPWXVWw0ZvB8hSkDbTkrsI0awNIpEf50aS8kEw3EZIrGaBpXliWug4Dn9lEAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="imgUser.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAASdJREFUWEft
        lQ0NwjAQhScBKTgACUhAAg7ACTgACTgAB+AAHMD7Fl6yAN1PdwsJ2Ze8pGuv1+v12hUjIxlMpLV0kh4v
        0aaPsUFZSjfJC7+LsYU0CCzuhQ7SXDK06fN4eBCk1jsnkBQOEtvQ49hI3nkTzgRzwjhLOK2mPQU22FKY
        YeAQtaWrfSM/D+Ao4bDLETAnDBfhvvyqx8Guyq8guFJ3CcdtriG24a8ijwvOnYmZZEg7fR4f7DWsBpHS
        oItfpG+LVoVNeBA7yQvwKFFgU8nQps8PFtpKIXhxCqtNZWPjgu0dhM8ch9UdN4GtM9HrOK4STnLuNHOY
        S01k4TvNuebimqh7O5L4t5qze+MstPmNf+D0dzn7d1wLWcfARNSXKD8jI39JUTwB8R531U0cTe4AAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        pCFD/gPouD0X3DXjRwAAAABJRU5ErkJggg==
</value>
  </data>
</root>